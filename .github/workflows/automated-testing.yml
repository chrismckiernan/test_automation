name: Automated Testing with Node/Micronaut
on:
  push:
    branches: [ master, kycio-test ]
  pull_request:
    branches: [ master ]
  
jobs:
  start-website:
    runs-on: ubuntu-latest    
    steps:
      - uses: actions/checkout@v2
      - name: Set up node
        uses: actions/setup-node@v2
        with:
          node-version: '12'
          check-latest: true
      - name: Start website
        run: 
          npm install
          npm run serve & npx wait-on http://localhost:8080

  start-micronaut-backend:   
    runs-on: ubuntu-latest
      
    services:
      postgres:
        image: postgres:10.8
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
        - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.11
      uses: actions/setup-java@v1
      with:
        java-version: 1.11
    - name: Run micronaut backend 
      run: |
        micronaut/gradlew clean assemble -b micronaut/build.gradle
        nohup micronaut/gradlew run -b micronaut/build.gradle &
        sleep 5
        grep "Startup completed" nohup.out
        
    - name: Load database
      run: |
        curl -X POST -H "Content-Type: application/json" -d @server/cloud-questions.json http://localhost:1919/survey/load
  
  automated-testing:
    runs-on: ubuntu-latest
    
    needs:
      - start-website
      - start-micronaut-backend
    
    env:
      WEBSITE: 'http://localhost:8080/'
    
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.11
      uses: actions/setup-java@v1
      with:
        java-version: 1.11
    - name: Run automated testing
      run: mvn -B test --file kycio-test/pom.xml

